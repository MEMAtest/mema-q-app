"use strict";(()=>{var e={};e.id=955,e.ids=[955],e.modules={524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},10:(e,t,a)=>{a.r(t),a.d(t,{config:()=>u,default:()=>l,routeModule:()=>c});var s={};a.r(s),a.d(s,{default:()=>handler});var i=a(802),r=a(44),n=a(249),d=a(524);let o=new d.PrismaClient;async function handler(e,t){if("GET"===e.method)try{let e=await o.question.findMany({orderBy:{id:"asc"}});t.status(200).json(e)}catch(e){t.status(500).json({message:"Error fetching questions"})}else t.setHeader("Allow",["GET"]),t.status(405).end(`Method ${e.method} Not Allowed`)}let l=(0,n.l)(s,"default"),u=(0,n.l)(s,"config"),c=new i.PagesAPIRouteModule({definition:{kind:r.x.PAGES_API,page:"/api/questions",pathname:"/api/questions",bundlePath:"",filename:""},userland:s})}};var t=require("../../webpack-api-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),a=t.X(0,[222],()=>__webpack_exec__(10));module.exports=a})();